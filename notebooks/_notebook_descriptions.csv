Notebook Name,Description
athal_transfer_learning.ipynb,"Define a dataset for training, and an out-of-domain dataset for validation. To test transfer learning success, train either a feed-forward, convolutional, or recurrent neural network on the training dataset, then evaluate this dataset on the validation set."
DAU_arabidopsis-data_exploration.ipynb,"Explore and visualize the arabidopsis chromosomal data. This includes both files provided, `athal_starr_hidra.tsv` and `athal_istarr_hidra.tsv`. We look at both sequence features and the target distribution."
DAU_canola-correlation.ipynb,"Explore and visualize correlation maps between nucleotide frequencies and target values, with the processed hidra starr dataset as the example."
DAU_canola-create_final_dataset-v1.0.ipynb,"Create the final Canola dataset from hidra.tsv. In this, we retain all features given to us in the unprocessed format, and add in nucleotide frequency features for each sequence. Only chloroplast rows are kept and chunks are trimmed. We create & visualize a feature ""set"", which indicates the train/test/val set that the row belongs to."
DAU_canola-cross_val_linear_mapping.ipynb,"Look at scoring, visualizations, and correlation maps between y_true and y_pred for each of 10 sequential cross validation folds and the hidra.tsv (canola organelle) dataset. This is done separately for chloroplast and mitochondrion data. We also look at the CG content and the target value summary statisics for each."
DAU_canola-data_exploration.ipynb,Explore and visualize first version of the canola organelle data (CanolaOrganelles_v.1.tsv). We look at both sequence features and the target distribution. Any of the cells that are commented out rely on a file that was generated before we knew that there were two organelles in the same file. The output is saved for your perusal anyway.
DAU_drosophila-create_final_dataset-v1.0.ipynb,"Read in the sequences_activity_<set>.txt and sequences_<set>.fa drosophila files, drop bad rows, format, and save dataset as drosophila_truncated.csv. Read in output.csv (Drosophila target value) and visualize/examine summary statistics. Do some real hacky nonsense to try to figure out the NaN bug I was having by combining the drosophila and arabidopsis datasets, please ignore the last bit."
DAU_MLME-results_visualization.ipynb,Generate visualizations used in presentations and reports using results gleamed from testing frequency and convolutional models on the arabidopsis organelle data.
DAU_MLME_canola-keras_model_loading.ipynb,"Explore technical aspects of using the MPRA-DragoNN model, including loading in a pre-defined architecture, initializing models with pre-defined weights, accessing individual layers, and using hdf5 data."
explore_and_create_streetlight_datasets.ipynb,"Three steps of the streetlight dataset creation process. The first is training an accessibility prediction model (either freq or conv) from the napus ATAC dataset (`atac.expression_with_seq.tsv`) after generating the dataset three different ways (from `atac.expression.binary.reformatted.tsv` and `atac.expression_with_seq.tsv`). Next, we use this model to create and restrict the arabidopsis dataset (`athal_starr_hidra.tsv`) based on these predictions."
explore_and_save_annotated_arabidopsis.ipynb,"Exploring arabidopsis dataset that arrived in .bed format. Implementing inaccessible downsampling algorithm. Formatting into proper output, visualizing and saving full dataset, downsampled inaccessible dataset, and accessible dataset."
explore_new_data.ipynb,Exploring both atac.expression_with_seq.tsv and athal_bac.intro.tsv.
MLME-recurrent_model-v1.0.ipynb,Implementing and testing RNN functionality trained on the 1/16th arabidopsis (i)starr dataset.
MLME-xgboost_model-v1.0.ipynb,Implementing and testing XGBoost functionality trained on the 1/16th arabidopsis (i)starr dataset.
MLME_canola-time.ipynb,Check how fast it is to run model training (MLME-v2.0-conv_model.py) on Google Colab with various hardware accelerators. The time taken to run one epoch on my local machine with these same settings was ~45s.
plot_test_vs_val.ipynb,"Define lists of spearman scores from many training replicates of conv models evaluated on both the test set of the drosophila training dataset, and the ""real"" tobacco dataset. Create a scatterplot between these spearman results for each replicate to examine the relationship between test performance and ""real validation"" performance."
process_test_and_atac_data.ipynb,"Implement way to define and process the Tobacco dataset (raw_test.csv) into something usable. Process and format a recent version of athal_starr_hidra.tsv, including padding to sequence length 153. Process, visualize, and format ATAC data (atac.expression_with_seq.tsv), including ways to downsample. Process and save BAC dataset (athal_bac.intro.tsv), including trimming."
run_validation_experiments.ipynb,"Define a training dataset and a ""real"" validation dataset. Train, validate, and test on the training dataset, then evaluate new trained model on the real validatin dataset. The models that can be trained are both frequency-feature based (feed-forward neural network), and sequence-accepting models (convolutional and recurrent neural networks.)"
test_streetlight_models.ipynb,"Load in models trained using various street-lit (or not) datasets, and test on various test sets (including both accessible and inaccessible). Output .csv with summary of performance."